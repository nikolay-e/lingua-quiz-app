name: Cleanup Preview Environment

on:
  pull_request:
    types: [closed]
    branches: [main]

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  GITOPS_REPO: nikolay-e/gitops

jobs:
  cleanup-preview:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout gitops repository
        uses: actions/checkout@v5.0.0
        with:
          repository: ${{ env.GITOPS_REPO }}
          token: ${{ secrets.GITOPS_PAT }}
          ref: main

      - name: Remove preview Application
        run: |
          PREVIEW_FILE="clusters/previews/pr-${PR_NUMBER}.yaml"

          if [ -f "${PREVIEW_FILE}" ]; then
            echo "Removing preview environment for PR #${PR_NUMBER}"

            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            git rm "${PREVIEW_FILE}"
            git commit -m "chore: cleanup preview environment for PR #${PR_NUMBER}

          PR closed: ${{ github.event.pull_request.html_url }}

          Argo CD will automatically prune all resources via 'spec.syncPolicy.automated.prune: true'.

          🤖 Automated cleanup via GitHub Actions"

            git push origin main

            echo "✓ Preview Application removed from GitOps"
            echo "✓ Argo CD will prune all Kubernetes resources"
          else
            echo "No preview environment found for PR #${PR_NUMBER}"
            echo "File does not exist: ${PREVIEW_FILE}"
          fi

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Delete preview database
        run: |
          DB_NAME="linguaquiz_pr_${PR_NUMBER}"
          DB_USER="linguaquiz_pr_${PR_NUMBER}"

          echo "Dropping preview database: ${DB_NAME}"

          # Get PostgreSQL pod in shared-database namespace
          POSTGRES_POD=$(kubectl get pod -n shared-database -l app.kubernetes.io/name=shared-postgres -o jsonpath='{.items[0].metadata.name}' 2>/dev/null)

          if [ -z "$POSTGRES_POD" ]; then
            echo "⚠️  PostgreSQL pod not found, database will be cleaned by Argo CD prune"
          else
            # Terminate active connections to the database
            kubectl exec -n shared-database "$POSTGRES_POD" -- \
              psql -U postgres -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname='${DB_NAME}';" 2>/dev/null || true

            # Drop database and user (idempotent)
            kubectl exec -n shared-database "$POSTGRES_POD" -- \
              psql -U postgres -c "DROP DATABASE IF EXISTS \"${DB_NAME}\"; DROP USER IF EXISTS \"${DB_USER}\";" 2>/dev/null || true

            echo "✓ Database ${DB_NAME} dropped"
          fi

      - name: Comment on PR
        uses: actions/github-script@v8
        with:
          script: |
            const prNumber = context.payload.pull_request.number;

            const comment = `## 🧹 Preview Environment Cleaned Up

            The preview environment for this PR has been removed.

            **Cleanup Status:** Argo CD is pruning resources (~2 minutes)

            Resources being removed:
            - ✅ Namespace: \`lingua-quiz-preview-pr-${prNumber}\`
            - ✅ Database: \`linguaquiz_pr_${prNumber}\`
            - ✅ SSL Certificate
            - ✅ All pods, services, and ingresses

            Thank you for using preview environments!
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
